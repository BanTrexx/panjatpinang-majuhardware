<%- include('../partials/display/header') %>

<style>
  body {
    background: #222;
    color: #fff;
    font-family: 'Segoe UI', Arial, sans-serif;
    margin: 0;
    padding: 0;
    overflow: hidden;
  }
  #status {
    text-align: center;
    font-size: 2.5em;
    margin-top: 30px;
    font-weight: bold;
    letter-spacing: 2px;
  }
  #countdown {
    text-align: center;
    font-size: 5em;
    font-weight: bold;
    color: #ffeb3b;
    margin: 20px 0 10px 0;
    transition: transform 0.2s;
    animation: countdownPop 0.3s;
  }
  @keyframes countdownPop {
    0% { transform: scale(1.5); }
    100% { transform: scale(1); }
  }
  #pinang-area {
    position: relative;
    width: 400px;
    height: 70vh;
    margin: 40px auto 0 auto;
    display: flex;
    justify-content: center;
    align-items: flex-end;
    background: none;
  }
  .pinang-tiang {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    bottom: 0;
    width: 30px;
    height: 100%;
    background: linear-gradient(to top, #b8860b 80%, #ffe082 100%);
    border-radius: 15px;
    box-shadow: 0 0 10px #0008;
    z-index: 1;
  }
  .player-avatar {
    position: absolute;
    left: 50%;
    width: 60px;
    height: 60px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.2em;
    font-weight: bold;
    box-shadow: 0 2px 8px #000a;
    z-index: 2;
    transition: bottom 0.3s;
  }
  .avatar-1 {
    background: linear-gradient(135deg, #00c3ff, #005bea);
    border: 4px solid #fff;
    transform: translateX(-110px);
    color: #fff;
  }
  .avatar-2 {
    background: linear-gradient(135deg, #ff512f, #dd2476);
    border: 4px solid #fff;
    transform: translateX(50px);
    color: #fff;
  }
  .player-label {
    position: absolute;
    left: 0;
    width: 120px;
    text-align: right;
    font-size: 1.2em;
    font-weight: bold;
    color: #fff;
    top: 50%;
    transform: translateY(-50%);
    z-index: 3;
  }
  .percent-label {
    position: absolute;
    right: 0;
    width: 70px;
    text-align: left;
    font-size: 1.1em;
    color: #ffeb3b;
    font-weight: bold;
    top: 50%;
    transform: translateY(-50%);
    z-index: 3;
  }
  #winner {
    text-align: center;
    font-size: 3.5em;
    color: #4caf50;
    font-weight: bold;
    margin: 50px 0 0 0;
    letter-spacing: 2px;
    animation: winnerPop 0.5s;
  }
  @keyframes winnerPop {
    0% { transform: scale(0.5); opacity: 0; }
    100% { transform: scale(1); opacity: 1; }
  }
  #queue {
    text-align: center;
    font-size: 1.5em;
    color: #bbb;
    margin-top: 40px;
  }
</style>

<div id="status"></div>
<div id="countdown"></div>
<div id="pinang-area">
  <div class="pinang-tiang"></div>
  <div id="avatar1" class="player-avatar avatar-1" style="display:none;">
    <span id="label1" class="player-label"></span>
    <span id="name1"></span>
    <span id="percent1" class="percent-label"></span>
  </div>
  <div id="avatar2" class="player-avatar avatar-2" style="display:none;">
    <span id="label2" class="player-label"></span>
    <span id="name2"></span>
    <span id="percent2" class="percent-label"></span>
  </div>
</div>
<div id="winner"></div>
<div id="queue"></div>

<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io({
    query: { role: 'display', userId: 'display' }
  });

  let currentPlayers = [];
  let playersProgress = {};

  function renderStatus(status, queueLength) {
    let text = '';
    if (status === 'waiting') text = 'Menunggu pemain...';
    if (status === 'countdown') text = 'Countdown dimulai!';
    if (status === 'playing') text = 'Permainan sedang berlangsung!';
    if (status === 'finished') text = 'Permainan selesai!';
    document.getElementById('status').innerText = text;
    document.getElementById('queue').innerText = `Antrian pemain: ${queueLength}`;
  }

  function renderPlayers(players, progress) {
    // Player 1
    if (players[0]) {
      const percent = ((progress[players[0]]||0)*100).toFixed(0);
      const area = document.getElementById('pinang-area');
      const avatar = document.getElementById('avatar1');
      avatar.style.display = 'flex';
      document.getElementById('name1').innerText = players[0]; // nama player
      document.getElementById('label1').innerText = '';
      document.getElementById('percent1').innerText = percent + '%';
      // Hitung posisi bottom (0 = bawah, 1 = atas)
      const areaHeight = area.offsetHeight - 60; // 60 = tinggi avatar
      avatar.style.bottom = (progress[players[0]]||0) * areaHeight + 'px';
    } else {
      document.getElementById('avatar1').style.display = 'none';
    }
    // Player 2
    if (players[1]) {
      const percent = ((progress[players[1]]||0)*100).toFixed(0);
      const area = document.getElementById('pinang-area');
      const avatar = document.getElementById('avatar2');
      avatar.style.display = 'flex';
      document.getElementById('name2').innerText = players[1]; // nama player
      document.getElementById('label2').innerText = '';
      document.getElementById('percent2').innerText = percent + '%';
      const areaHeight = area.offsetHeight - 60;
      avatar.style.bottom = (progress[players[1]]||0) * areaHeight + 'px';
    } else {
      document.getElementById('avatar2').style.display = 'none';
    }
  }

  function renderWinner(winner) {
    document.getElementById('winner').innerText = winner ? `Pemenang: ${winner}` : '';
  }

  socket.on('gameStatusUpdate', ({ gameStatus, currentPlayers: players, playersProgress: progress, winner, queueLength }) => {
    currentPlayers = players;
    playersProgress = progress;
    renderStatus(gameStatus, queueLength);
    renderPlayers(players, progress);
    renderWinner(winner);
    if (gameStatus !== 'countdown') {
      document.getElementById('countdown').innerText = '';
    }
    if (gameStatus !== 'finished') {
      document.getElementById('winner').innerText = '';
    }
  });

  socket.on('countdown', (count) => {
    const el = document.getElementById('countdown');
    el.innerText = count > 0 ? ` ${count} ` : '';
    el.style.animation = 'none';
    el.offsetHeight; // trigger reflow
    el.style.animation = null;
  });

  socket.on('gameFinished', ({ winner }) => {
    renderWinner(winner);
  });
</script>

<%- include('../partials/display/footer') %>
