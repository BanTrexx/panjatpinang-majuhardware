<%- include('../partials/clients/header') %>

<style>
  body,
  html {
    margin: 0;
    padding: 0;
    height: 100%;
    background-color: #1e1e1e;
    color: #fff;
    font-family: "Lexend", Arial, sans-serif;
    overflow: hidden;
  }

  .waiting-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    padding: 32px 0;
  }

  .player-name-card {
    background: #fff;
    border-radius: 100px;
    padding: 10px 32px;
    font-size: 20px;
    font-weight: 600;
    margin-bottom: 18px;
    color: #454545;
    display: inline-block;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.07);
  }

  .avatar-big {
    width: 300px;
    height: 300px;
    object-fit: contain;
    margin-bottom: 18px;
    margin-top: -40px;
    z-index: 2;
  }

  .status-card {
    background: #fff;
    border-radius: 20px;
    box-shadow: 0 6px 24px rgba(0, 0, 0, 0.1);
    padding: 24px 18px 18px 18px;
    margin-bottom: 32px;
    width: 100%;
    max-width: 370px;
    text-align: center;
    color: #888;
    position: relative;
    margin-top: -100px;
    z-index: 2;
  }

  .score-card {
    background: #fff;
    border-radius: 20px;
    box-shadow: 0 6px 24px rgba(0, 0, 0, 0.1);
    padding: 24px 18px 18px 18px;
    margin-bottom: 32px;
    width: 100%;
    max-width: 370px;
    text-align: center;
    color: #888;
    position: relative;
  }

  .timer-row {
    display: flex;
    justify-content: center;
    align-items: flex-end;
    gap: 18px;
    margin-top: 10px;
  }

  .timer-num {
    font-size: 2.5rem;
    font-weight: 600;
    color: #222;
    letter-spacing: 2px;
    min-width: 48px;
    text-align: center;
  }

  .timer-label {
    font-size: 0.9rem;
    color: #aaa;
    margin-top: -8px;
    text-align: center;
  }

  .btn-row {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 36px;
    margin-top: 36px;
  }

  .btn-row .text-center {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .circle-btn {
    width: 121px;
    height: 121px;
    border-radius: 100%;
    background: linear-gradient(180deg, #7ecb8f 0%, #5fa96d 100%);
    box-shadow: 0 6px 18px rgba(0, 0, 0, 0.13);
    border: none;
    outline: none;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    color: #fff;
    font-weight: 700;
    cursor: pointer;
    transition: box-shadow 0.2s, transform 0.2s;
    position: relative;
  }

  .circle-btn:active {
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
    transform: translateY(2px);
  }

  .btn-label {
    margin-top: 12px;
    width: 121px;
    height: 33px;
    background: #fff;
    color: #f9a825;
    font-weight: 700;
    border-radius: 20px;
    padding: 6px 12px;
    font-size: 13px;
    letter-spacing: 1px;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    box-sizing: border-box;
  }

  @media (max-width: 500px) {
    .status-card {
      padding: 14px 4vw 10px 4vw;
      max-width: 98vw;
    }
    .score-card {
      padding: 14px 4vw 10px 4vw;
      max-width: 98vw;
    }
  }
</style>

<main class="d-flex justify-content-center align-items-start min-vh-100 mt-5">
  <div class="px-4 text-center" style="max-width: 400px; width: 100%">
    <div id="skor-permainan">
      <div class="d-flex justify-content-center" style="margin-bottom: 0">
        <div
          class="px-4 py-2 text-dark"
          style="
            background-color: #f9d857;
            border-radius: 20px;
            font-size: 16px;
            color: #454545;
            font-family: 'Lexend', sans-serif;
            margin-bottom: -20px;
            position: relative;
            z-index: 2;
          "
        >
          Skor Permainan
        </div>
      </div>
    </div>
    <div class="score-card">
      <div id="score-point"></div>
    </div>
    <div class="player-name-card"><%= nama %></div>
    <% if (avatar) { %>
    <img
      src="/assets/img/avatar/<%= avatar %>"
      alt="Avatar"
      class="avatar-big"
    />
    <% } %>

    <div class="status-card">
      <div id="status"></div>
      <div id="countdown"></div>
      <div id="winner"></div>
      <div id="queue"></div>
    </div>

    <div class="btn-row">
      <div class="text-center">
        <button
          class="circle-btn"
          id="btnAvoid"
          type="button"
          disabled
          style="padding: 0; background: none; box-shadow: none; border: none"
        >
          <img
            src="/assets/img/Hindar.png"
            alt="Hindar"
            style="width: 158px; height: 158px; object-fit: contain"
          />
        </button>
      </div>
      <div class="text-center">
        <button
          class="circle-btn"
          id="btnClimb"
          type="button"
          style="padding: 0; background: none; box-shadow: none; border: none"
        >
          <img
            src="/assets/img/Panjat.png"
            alt="Panjat"
            style="width: 158px; height: 158px; object-fit: contain"
          />
        </button>
      </div>
    </div>
  </div>
</main>

<script src="/socket.io/socket.io.js"></script>
<script>
  // Ambil nama player dari EJS
  const playerName = "<%= nama %>";
  const socket = io({
    query: { role: "player", name: playerName },
  });

  let gameStatus = "waiting";
  let currentPlayers = [];
  let winner = null;
  let queueLength = 0;

  document.addEventListener("DOMContentLoaded", function () {
    renderStatus(gameStatus);
  });

  function renderStatus(status) {
    let text = "";
    if (status === "waiting")
      text = "Tunggu pemain lain menyelesaikan permainannya dalam waktu";
    if (status === "countdown") text = "Countdown dimulai!";
    if (status === "playing") text = "Ayo tap secepatnya!";
    if (status === "finished") text = "Permainan selesai!";
    document.getElementById("status").innerText = text;
  }

  function renderWinner(winnerName) {
    if (!winnerName) {
      document.getElementById("winner").innerText = "";
      return;
    }
    if (winnerName === playerName) {
      document.getElementById("winner").innerText = "Selamat! Anda MENANG!";
    } else if (currentPlayers.includes(playerName)) {
      document.getElementById("winner").innerText = "Anda KALAH!";
    } else {
      document.getElementById("winner").innerText = "";
    }
  }

  function renderQueue() {
    const queueDiv = document.getElementById("queue");
    // Tampilkan antrian hanya jika user sedang menunggu giliran dan gameStatus 'playing'
    if (
      gameStatus === "playing" &&
      !currentPlayers.includes(playerName) &&
      queueLength > 0
    ) {
      queueDiv.style.display = "block";
      queueDiv.innerText = `Menunggu giliran... Antrian pemain: ${queueLength}`;
    } else {
      queueDiv.style.display = "none";
      queueDiv.innerText = "";
    }
  }

  // Tap area logic
  const btnClimb = document.getElementById("btnClimb");
  btnClimb.addEventListener("click", () => {
    if (gameStatus === "playing" && currentPlayers.includes(playerName)) {
      socket.emit("playerAction");
    }
  });

  function updateScoreVisibility() {
    const skorContainer = document.getElementById("skor-permainan");
    const scoreCard = document.querySelector(".score-card");

    if (
      (gameStatus === "playing" && currentPlayers.includes(playerName)) ||
      gameStatus === "finished"
    ) {
      skorContainer.style.display = "block";
      scoreCard.style.display = "block";
    } else {
      skorContainer.style.display = "none";
      scoreCard.style.display = "none";
    }
  }

  socket.on("scoreUpdate", (score) => {
    document.getElementById("score-point").innerText = score;
  });

  // --- Only listen for updates from app.js (relayed from display) ---
  socket.on(
    "gameStatusUpdate",
    ({
      gameStatus: status,
      currentPlayers: players,
      winner: win,
      queueLength: ql,
    }) => {
      gameStatus = status;
      currentPlayers = players;
      winner = win;
      queueLength = ql;
      renderStatus(status);
      renderWinner(win);
      renderQueue();
      updateScoreVisibility();

      if (status !== "countdown") {
        document.getElementById("countdown").innerText = "";
      }
      if (status !== "finished") {
        document.getElementById("winner").innerText = "";
      }
    }
  );

  socket.on("countdown", (count) => {
    document.getElementById("countdown").innerText =
      count > 0 ? `${count}` : "";
  });

  socket.on("gameFinished", ({ winner: win, score }) => {
    renderWinner(win);
    renderQueue();
    gameStatus = "finished";
    document.getElementById("score-point").innerText = score;
    updateScoreVisibility();
    setTimeout(() => {
      window.location.href = "/";
    }, 5000);
  });
</script>

<%- include('../partials/clients/footer') %>
