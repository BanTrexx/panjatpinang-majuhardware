<%- include('../partials/clients/header') %>

<style>
  .shadow-soft {
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    border-radius: 20px;
    background-color: white;
  }

  .custom-btn {
    background: linear-gradient(90deg, #9f7fff 0%, #8055fe 100%);
    color: white;
    padding: 0.75rem 2.5rem;
    border: none;
    border-radius: 100px;
    font-weight: 600;
    font-size: 1rem;
    box-shadow: 0 10px 25px rgba(128, 85, 254, 0.4);
    transition: all 0.3s ease;
  }

  .custom-btn:hover {
    box-shadow: 0 12px 30px rgba(128, 85, 254, 0.6);
    transform: translateY(-2px);
  }

  .avatar-card {
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    cursor: pointer;
  }

  .avatar-card:hover {
    transform: scale(1.05);
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
  }

  .avatar-card.selected {
    border: 3px solid #f9d857;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);
  }

  .gender-btn.active {
    background-color: #ffc107;
    color: #000;
    border: none;
  }

  .section-title {
    font-weight: 600;
    font-size: 18px;
  }

  .section-label {
    text-align: center;
    background-color: #ffde74;
    border-radius: 20px;
    padding: 8px 16px;
    font-size: 16px;
    font-weight: 500; /* Medium weight */
    font-family: "Lexend", sans-serif;
    margin-bottom: 15px;
    font-weight: 500;
    color: #222;
  }

  .avatars {
    display: flex;
    gap: 50px;
    justify-content: center;
    margin-bottom: 20px;
  }

  .avatar-card {
    background-color: white;
    border-radius: 20px;
    padding: 10px;
    width: 100%;
    max-width: 148px;
    height: auto;
    aspect-ratio: 148 / 262;
    text-align: center;
    cursor: pointer;
    transition: transform 0.2s;
    box-shadow: 0 16px 32px rgba(0, 0, 0, 0.1);
  }

  .avatar-card:hover {
    transform: translateY(-5px);
  }

  .avatar-card {
    position: relative;
    overflow: visible; /* default-nya biasanya hidden */
    z-index: 1;
  }

  .avatar-img {
    width: 130%; /* lebih besar dari card */
    height: auto;
    object-fit: cover;
    position: absolute;
    transform: translateX(-50%);
    z-index: 2;
  }

  .gender-buttons {
    display: flex;
    gap: 15px;
    justify-content: center;
    margin-bottom: 25px;
  }

  .gender-btn {
    border: none;
    border-radius: 20px;
    padding: 10px 16px;
    font-weight: bold;
    font-size: 14px;
    flex: 1;
    cursor: pointer;
    background-color: white;
    color: #222;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 6px;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
  }

  .gender-btn.active {
    background-color: #ffffff;
    border: 2px solid #4f46e5;
    color: #4f46e5;
  }

  input[type="radio"] {
    display: none;
  }

  .avatar-card img.grayscale {
    filter: grayscale(100%);
    transition: filter 0.3s ease;
  }

  .avatar-card input[type="radio"]:checked + img {
    filter: none !important;
  }

  .carousel-container {
    position: relative;
    width: 100%;
    overflow: hidden;
  }

  .carousel-track {
    display: flex;
    transition: transform 0.4s ease;
    padding: 40px 0;
    gap: -20px;
    touch-action: pan-y;
  }

  .card {
    flex: 0 0 auto;
    width: 221.73px;
    height: 221.73px;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: all 0.3s ease;
    transform: scale(0.8);
    opacity: 0.5;
    background: none;
    border: none;
    box-shadow: none;
  }

  .card.active {
    background: rgba(255, 255, 255, 0.4);
    border: 2px solid rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    transform: scale(1);
    opacity: 1;
    z-index: 1;
  }

  .card img {
    max-width: 130%;
    max-height: 130%;
    object-fit: contain;
    border-radius: 20px;
  }

  .nav-button {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    font-size: 28px;
    background: rgba(255, 255, 255, 0.95);
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    cursor: pointer;
    z-index: 10;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }

  .nav-button.left {
    left: 10px;
  }

  .nav-button.right {
    right: 10px;
  }

  .nav-button.left,
  .nav-button.right {
    display: none;
  }
</style>

<main class="d-flex justify-content-center align-items-center mt-5">
  <div class="px-4 text-center" style="max-width: 400px; width: 100%">
    <p
      class="mb-4"
      style="
        font-family: 'Lexend', sans-serif;
        font-size: 25px;
        color: #000000;
        font-weight: bold;
      "
    >
      ISI DATA DIRI SEBELUM <br />
      MEMULAI PERMAINAN.
    </p>

    <form action="/tutor" method="POST">
      <input type="hidden" name="avatar" id="selected-character" />
      <div id="dataDiriSection">
        <div class="form-floating mb-3 shadow-soft">
          <input
            type="text"
            class="form-control rounded-4"
            name="name"
            placeholder="Nama Karakter"
            required
          />
          <label>Nama Karakter</label>
        </div>
        <div class="form-floating mb-3 shadow-soft">
          <input
            type="text"
            class="form-control rounded-4"
            name="namalengkap"
            placeholder="Nama lengkap"
            required
          />
          <label>Nama Lengkap</label>
        </div>
        <div class="form-floating mb-3 shadow-soft">
          <input
            type="number"
            class="form-control rounded-4"
            name="notlp"
            placeholder="Nomor HP"
            required
          />
          <label>Nomor HP</label>
        </div>
        <div class="form-floating mb-4 shadow-soft">
          <input
            type="text"
            class="form-control rounded-4"
            name="ig"
            placeholder="Instagram"
            required
          />
          <label>Instagram</label>
        </div>
        <div class="text-center mt-4">
          <button type="button" id="nextStep" class="custom-btn">Lanjut</button>
        </div>
      </div>

      <div id="genderAvatarSection" style="display: none">
        <div class="section-label">Pilih Karakter</div>
        <!-- GENDER SELECTION -->
        <div class="carousel-container">
          <button class="nav-button left">&#8592;</button>
          <div class="carousel-track" id="carousel">
            <div class="card active" data-id="1">
              <img src="/assets/img/avatar/male1.png" alt="Pak Hard" />
            </div>
            <div class="card" data-id="2">
              <img src="/assets/img/avatar/female1.png" alt="Mas Ware" />
            </div>
            <div class="card" data-id="3">
              <img src="/assets/img/avatar/male2.png" alt="Mbak Juma" />
            </div>
            <div class="card" data-id="4">
              <img src="/assets/img/avatar/female2.png" alt="Tante Mawar" />
            </div>
          </div>
          <button class="nav-button right">&#8594;</button>
        </div>

        <!-- SUBMIT BUTTON -->
        <div class="text-center mt-4">
          <button type="submit" class="custom-btn">Daftar</button>
        </div>
      </div>
    </form>
  </div>
</main>

<%- include('../partials/clients/footer') %>

<script>
  document.getElementById("nextStep").addEventListener("click", function () {
    document.getElementById("dataDiriSection").style.display = "none";
    document.getElementById("genderAvatarSection").style.display = "block";
  });

  const avatarContainer = document.getElementById("avatarContainer");

  const track = document.getElementById("carousel");
  const cards = track.querySelectorAll(".card");
  const btnLeft = document.querySelector(".nav-button.left");
  const btnRight = document.querySelector(".nav-button.right");

  let activeIndex = 0;

  function updateCarousel() {
    const cardWidth = cards[0].offsetWidth + 20; // width + gap
    const centerOffset =
      track.parentElement.offsetWidth / 2 - cards[0].offsetWidth / 2;
    track.style.transform = `translateX(calc(${centerOffset}px - ${
      activeIndex * cardWidth
    }px))`;

    cards.forEach((card, index) => {
      card.classList.toggle("active", index === activeIndex);
    });

    const selectedCharacterInput =
      document.getElementById("selected-character");
    const activeCard = cards[activeIndex];
    const img = activeCard.querySelector("img");
    // Ambil nama file dari src
    const src = img.getAttribute("src");
    const filename = src.substring(src.lastIndexOf("/") + 1);
    selectedCharacterInput.value = filename;
  }

  btnLeft.addEventListener("click", () => {
    if (activeIndex > 0) {
      activeIndex--;
      updateCarousel();
    }
  });

  btnRight.addEventListener("click", () => {
    if (activeIndex < cards.length - 1) {
      activeIndex++;
      updateCarousel();
    }
  });

  // Swipe support
  let startX = 0;
  let isDragging = false;

  track.addEventListener("touchstart", (e) => {
    startX = e.touches[0].clientX;
    isDragging = true;
  });

  track.addEventListener("touchend", (e) => {
    if (!isDragging) return;
    const endX = e.changedTouches[0].clientX;
    handleSwipe(endX - startX);
    isDragging = false;
  });

  track.addEventListener("mousedown", (e) => {
    startX = e.clientX;
    isDragging = true;
  });

  track.addEventListener("mouseup", (e) => {
    if (!isDragging) return;
    const endX = e.clientX;
    handleSwipe(endX - startX);
    isDragging = false;
  });

  function handleSwipe(deltaX) {
    const threshold = 50;
    if (deltaX > threshold && activeIndex > 0) {
      activeIndex--;
      updateCarousel();
    } else if (deltaX < -threshold && activeIndex < cards.length - 1) {
      activeIndex++;
      updateCarousel();
    }
  }

  window.addEventListener("load", updateCarousel);
  window.addEventListener("resize", updateCarousel);
</script>
